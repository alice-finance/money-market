@startuml
class IInterestCalculator {
+ getInterestRate
+ getExpectedBalance
}

class SavingsInterestCalculatorV1 {
}

class ZeroSavingsInterestCalculator {
}

class ISavings {
+ depositWithData()
+ withdrawWithData()
+ getSavingsRecordIdsWithData()
+ getSavingsRecordsWithData()
+ getSavingsRecordWithData()
+ getRawSavingsRecordsWithData()
+ getRawSavingsRecordWithData()
+ getCurrentSavingsInterestRateWithData()
+ getCurrentSavingsAPRWithData()
+ getExpectedSavingsInterestRateWithData()
+ getExpectedSavingsAPRWithData()
+ savingsCalculatorWithData()
+ setSavingsCalculatorWithData(IInterestCalculator calculator)
}

class Constants {
}

class Ownable {
+ owner()
+ isOwner()
+ transferOwnership(address newOwner)
}

class Asset {
+ asset()
}

class Upgradable {
+ loan()
+ setLoan(address newLoanAddress)
+ savingsCalculator()
+ setSavingsCalculator(IInterestCalculator calculator)
}

class Fund {
+ totalFunds()
+ totalBorrows()
}

class Savings {
+ savingsCalculatorWithData()
+ setSavingsCalculatorWithData(IInterestCalculator calculator)
}

class MinimumAmountRequiredSavings {
+ minimumSavingsAmount()
+ setMinimumSavingsAmount(uint256 amount)
}

class IInvitationManager {
+ inviter()
+ invitationSlots()
+ isRedeemed()
+ redemptions()
+ redemptionCount()
+ totalRedeemed()
+ redeem()
}

class InvitationOnlySavingsBase{
}

Constants <|-down- Ownable
Ownable <|-down- Asset
Asset <|-down- Upgradable
Upgradable <|-down- Fund
    Upgradable *-right- IInterestCalculator : have 1 >
Fund <|-down- SavingsData
ISavings <|-right- SavingsData
SavingsData <|-down- ReentrancyGuard
ReentrancyGuard <|-down- Savings
Savings <|-- MinimumAmountRequiredSavings
    Savings *- IInterestCalculator : have n >
MinimumAmountRequiredSavings <|-down- InvitationOnlySavingsBase
IInvitationManager <|-down- InvitationOnlySavingsBase

IInterestCalculator <|--  SavingsInterestCalculatorV1
IInterestCalculator <|--  ZeroSavingsInterestCalculator
@enduml
